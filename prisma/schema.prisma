generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String  @id @default(uuid())
  externalId String
  firstName  String
  lastName   String
  email      String  @unique
  phone      String?
  role       String?
  company    Company[]

  @@map("users")
}

model Company {
  id           String  @id @default(uuid())
  name         String
  ownerId      String
  image        String @default("")
  description  String
  owner        User    @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  posts        Post[]
  producers    Producer[]
  topics       Topic[]

  @@map("companies")
}

model Post {
  id           String   @id @default(uuid())
  content      String
  publishedAt  DateTime
  authorId     String
  companyId    String
  imagePreview String
  contentPreview String
  author       Producer     @relation(fields: [authorId], references: [id])
  company      Company  @relation(fields: [companyId], references: [id], onDelete: Cascade)
  topics       Post_Topics[]

  @@map("posts")
}

model Topic {
  id          String   @id @default(uuid())
  description String
  companyId   String
  company     Company  @relation(fields: [companyId], references: [id], onDelete: Cascade)
  posts       Post_Topics[]

  @@map("topics")
}

model Post_Topics {
  post     Post    @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId   String
  topic    Topic   @relation(fields: [topicId], references: [id], onDelete: Cascade)
  topicId  String

  @@id([postId, topicId])
}


model Producer {
  id           String  @id @default(uuid())
  name         String
  imageProfile String?
  email        String  
  office       String
  companyId    String  
  company      Company @relation(fields: [companyId], references: [id], onDelete: Cascade)
  posts        Post[]

  @@map("producers")
}
